/********************************************************************
* im_extras.js
*
* This file contains functions related to the intermap extra features
* ie the ones the user can call via the buttons below the bigger map.
* 
********************************************************************/

/********************************************************************
*** LAYERS
********************************************************************/
/*
## Called by the bottom toolbar
## Shows a list of configured map servers
*/
function im_addLayer()
{
    // setup WB
    clearNode('im_whiteboard');    
    var WB = $('im_whiteboard');

    var wbtitle = im_createWBTitle(i18n('addLayer')); //FIXME i18n
    WB.appendChild(wbtitle);

    var closer = im_getWBCloser();
    WB.appendChild(closer);
    Event.observe(closer, 'click', im_closeWhiteBoard);

    // fill contents
    var div = document.createElement('div'); // main box
    div.id = "im_serverList";
    div.className = 'im_wbcontent';
    WB.appendChild(div);
   
    var myAjax = new Ajax.Updater (
           'im_serverList',    
    	'/intermap/srv/'+Env.lang+'/mapServers.listServers.embedded', 
    	{
    		method: 'get',    		    	
    		onFailure: im_load_error
    	}
    );
}

/*
## Called when a known map server has been selected
*/
function im_mapServerSelected(id, name, refreshCache)
{
	var im = $('im_serverList');
	clearNode(im);
	
	var t1 = Builder.node("p");
	t1.innerHTML = i18n("wait");
	im.appendChild(t1);
	
	var t2 = document.createElement("p");
	t2.innerHTML = i18n("loadingFrom") + " " + name;	
	im.appendChild(t2);

            imc_loadServerServices(id, refreshCache, im_servicesLoaded, "im_servicesSelected();");
}

function imc_loadServerServices(id, refreshCache, callback, jscallback)
{
	var url = '/intermap/srv/'+Env.lang+'/mapServers.getServices.embedded';
	var pars = 'mapserver='+id  				
	                +"&jscallback="+encodeURIComponent(jscallback)
	                +"&refreshCache="+refreshCache;

	var myAjax = new Ajax.Request (
		url, 
		{
			method: 'get',
			parameters: pars,
			onSuccess: callback,
			onFailure: im_load_error
		}
	);
}

/*
## Called when the URL of an unknown map server has been given
*/
function im_mapServerURL(url, refreshCache)
{
	var im = $('im_serverList');
	clearNode(im);

	var t1 = document.createElement("p");
	t1.innerHTML = "...please wait...";
	im.appendChild(t1);

	var t2 = document.createElement("p");
	t2.innerHTML = i18n("loadingFromWMS");	
	im.appendChild(t2);

            imc_loadURLServices(url, refreshCache, -2, im_servicesLoaded, "im_servicesSelected();" );
}

function imc_loadURLServices(url, refreshCache, type, callback, jscallback)
{
	var pars = 'mapserver='+type
	                +"&url="+encodeURIComponent(url)
	                +"&jscallback="+encodeURIComponent(jscallback)
	                +"&refreshCache="+refreshCache;
	
	var myAjax = new Ajax.Request (
		'/intermap/srv/'+Env.lang+'/mapServers.getServices.embedded', 
		{
			method: 'get',
			parameters: pars,
			onSuccess: callback,
			onFailure: im_load_error
		}
	);
}

function im_servicesLoaded(req)
{
	// Dinamically generate content
	var im = $('im_serverList');
	im.innerHTML =req.responseText; 
}

/*
## Called by the ok button generated by service mapServers.getServices.embedded
*/
function im_servicesSelected()
{
	var im = $('im_serverList');
	
	// next two elements are created by the mapServers.getServices.embedded service
	var url   = $('im_addlayer_serverurl').value;
	var type = $('im_addlayer_type').value;
	
	var services = new Array();
	//var query = "url="+url+"&type="+type;
	
	var lilist = im.getElementsByTagName("input");
			
	$A(lilist).each(
	    function (input)
	    {
	        var value = input.value;
	        var checked = input.checked;
	        
	        if(checked)
	        {
	            services.push(value);
	            //query += "&service="+value;	        
	        }
	    }
	
	
	);
	
	//alert(query);
	
	setStatus('busy');
	imc_addServices(url, services, type, im_servicesAdded);
	
}

function im_servicesAdded(req)
{
	var im = $('im_serverList');
	clearNode(im);
	
	var t1 = document.createElement("p");
	t1.innerHTML = i18n("layersAdded");
	im.appendChild(t1);
	
	im_buildLayerList(req); // rebuild layers' list
	
	//imc_reloadLayers(); 
			
           // refreshes should be chained
	refreshNeeded(); // refresh big map
	// im_mm_refreshNeeded(); // refresh minimap	
		
}

/********************************************************************
*** PDF
********************************************************************/
/*
## Called by the bottom toolbar
*/
function im_openPDFform()
{
	// setup WB
	clearNode('im_whiteboard');    
	var WB = $('im_whiteboard');
	
	var wbtitle = im_createWBTitle(i18n('exportAsPDF')); //FIXME i18n
	WB.appendChild(wbtitle);
	
	var closer = im_getWBCloser();
	WB.appendChild(closer);
	Event.observe(closer, 'click', im_closeWhiteBoard);
	
	var div = document.createElement('div'); // main box
	div.id = "im_createPDF";
	div.className = 'im_wbcontent';
	WB.appendChild(div);
	
	var myAjax = new Ajax.Updater (
		'im_createPDF',    
		'/intermap/srv/'+Env.lang+'/static.form.pdf', 
		{
			method: 'get',    		    	
			onFailure: im_load_error
		}
	);

}

function im_requestPDF()
{
	var orient = $('pdf_orientation').value;
	var psize = $('pdf_pagesize').value;

	var ptitle = $('pdf_title').value;
	var pcopy = $('pdf_copyright').value;
	
	var bllist = $('pdf_layerlist').checked;
	var bdetails = $('pdf_details').checked;
	var bbbox = $('pdf_boundingbox').checked;
	var bscale = $('pdf_scalebar').checked;
	var barrow = $('pdf_arrow').checked;
	
	var pars = "orientation="+orient+
		"&pagesize="+psize+
		"&"+im_bm_getURLbbox();
		
	if(ptitle)
		pars += "&title="+ encodeURIComponent(ptitle);
	if(pcopy)
		pars += "&copyright="+ encodeURIComponent(pcopy);


	if(bllist)
		pars += "&layerlist=on";
	
	if(bdetails)
		pars += "&details=on";
	
	if(bbbox)
		pars += "&boundingbox=on";

	if(bscale)
		pars += "&scalebar=on";

	if(barrow)
		pars += "&arrow=on";

	$('im_requestingpdf').show();   
	$('im_requestpdf').hide();
	$('im_builtpdf').hide();
	
	var myAjax = new Ajax.Request (
		'/intermap/srv/'+Env.lang+'/create.pdf', 
		{
			method: 'get',
			parameters: pars,
			onSuccess: im_openPDF,
			onFailure: im_load_error
		}
	);
    
}

function im_openPDF(req)
{
    var url = req.responseXML.documentElement.getElementsByTagName('url')[0].firstChild.nodeValue;

    window.open(url);

    $('im_requestpdf').show();
    $('im_requestingpdf').hide();   
    $('im_builtpdf').show();
}

/********************************************************************
*** WMC
********************************************************************/
/*
## Called by the bottom toolbar
*/
function im_openWMCform()
{
	// setup WB
	clearNode('im_whiteboard');    
	var WB = $('im_whiteboard');
	
	var wbtitle = im_createWBTitle(i18n("wmcmenu")); 
	WB.appendChild(wbtitle);
	
	var closer = im_getWBCloser();
	WB.appendChild(closer);
	Event.observe(closer, 'click', im_closeWhiteBoard);
	
	var div = document.createElement('div'); // main box
	div.id = "im_wmcmenu";
	div.className = 'im_wbcontent';
	WB.appendChild(div);
	
	var pars="&width=" + im_bm_width + 
		    "&height=" + im_bm_height;
		
	var myAjax = new Ajax.Updater (
		'im_wmcmenu',    
		'/intermap/srv/'+Env.lang+'/wmc.form', 
		{
			method: 'get',    		    	
			parameters: pars,
			onFailure: im_load_error
		}
	);

}

/**
## Download WMC context. This is  one-shot operation.
*/
function im_downloadWMC()
{
    var pars= "width=" + im_bm_width + 
                    "&height=" + im_bm_height;

    window.open('/intermap/srv/en/wmc.getContext?'+pars);
}

/**
## Upload a context saved in a local file
## Context can be merged to current layers, or can completely replace them according to the parameter bClearLayers
*/
function im_uploadWMC(bClearLayers)
{
    var form = $('im_fuploadwmc');
    form.action='/intermap/srv/en/wmc.uploadContext';
    $('im_fup_clearLayers').value= bClearLayers? 'true' : 'false';
    
    return AIM.submit(form, 
        {
            'onStart' : function() 
            {
                setStatus('busy');
                im_wmc_showMessage("upload", "start");
                return true;
            }, 
            'onComplete' : function(domdoc) 
            {
                setStatus('idle');
                var resp = domdoc.documentElement;
                if(resp.tagName == "error")
                {
                    var msg = resp.getElementsByTagName('message')[0].firstChild.nodeValue;
                    im_wmc_showMessage("upload", "error", msg);                
                }
                else
                {                
                    im_wmc_showMessage("upload", "ok");                
                    im_bm_set(resp);
                    imc_reloadLayers();
                    im_mm_setBBox_dom(resp);
                    im_mm_refreshNeeded(); // refresh minimap
                }
            }                    
        });
}

// Send WMC as e-mail
function im_sendWMC()
{
	var title = $('wmc_title').value;
	var from = $('wmc_mailfrom').value;
	var to = $('wmc_mailto').value;

            if(!title || !from || !to)
            {
                alert("Please fill in information"); //FIXME i18n
                return;
            }
	
	pars="wmc_title=" + encodeURIComponent(title)
	        +"&wmc_mailfrom=" + encodeURIComponent(from)
	        +"&wmc_mailto=" + encodeURIComponent(to)
                   +"&width=" + im_bm_width    // WMC stuff 
                   +"&height=" + im_bm_height; // WMC stuff	        

            im_wmc_showMessage("mail", "start");

	var myAjax = new Ajax.Request (
		'/intermap/srv/'+Env.lang+'/wmc.mailContext', 
		{
			method: 'post',
			parameters: pars,
			onSuccess: function(req)
			{
			    var resp = req.responseXML.documentElement;
                                    if(resp.tagName == "error")
                                    {
                                        var msg = resp.getElementsByTagName('message')[0].firstChild.nodeValue;
                                        im_wmc_showMessage("mail", "error", msg);                
                                    }
                                    else
                                    {                
                                        im_wmc_showMessage("mail", "ok");
                                    }
			},
			onFailure: function(req)
			{
                                    im_wmc_showMessage("mail", "error");			
			}
		}
	);
    
}

function im_openWMC(req)
{
    var url = req.responseXML.documentElement.getElementsByTagName('url')[0].firstChild.nodeValue;

    window.open(url);

    $('im_requestpdf').show();
    $('im_requestingpdf').hide();   
    $('im_builtpdf').show();
}


function im_wmc_showMessage(task, status, more)
{
    $('im_wmc_form').hide();
    
    $('im_wmc_msg_'+task+"_start").hide();
    $('im_wmc_msg_'+task+"_ok").hide();
    $('im_wmc_msg_'+task+"_error").hide();
    
    $('im_wmc_msg_'+task+"_"+status).show();
    
    if(more)
    {
        var div = document.createElement('div');
        div.innerHTML = more;
        $('im_wmc_msg_'+task+"_"+status).appendChild(div);        
    }
}


/********************************************************************
*** Export image
********************************************************************/
/*
## Called by the bottom toolbar
*/
function im_openPictureForm()
{
    clearNode('im_whiteboard');

    var div = document.createElement('div');
    div.id = "im_createPic";
    $('im_whiteboard').appendChild(div);

    var wbtitle = im_createWBTitle("Export this map as image"); //FIXME i18n
    div.appendChild(wbtitle);

    var closer = im_getWBCloser();
    div.appendChild(closer);
    Event.observe(closer, 'click', im_closeWhiteBoard);

    var h1 = document.createElement('h1');
    h1.innerHTML = "TODO" ; //FIXME i18n 
    div.appendChild(h1);

}


/********************************************************************
*** Layer metadata
***
*** This feature is not triggered from the bottom toolsbar, but by the "show metadata" button on every layer.
*** We'll use the sub-map area to display these info.
***
********************************************************************/

function im_showLayerMD(id)
{
    // setup WB
    clearNode('im_whiteboard');    
    var WB = $('im_whiteboard');

    var wbtitle = im_createWBTitle(i18n('showLayerMD')); 
    WB.appendChild(wbtitle);

    var closer = im_getWBCloser();
    WB.appendChild(closer);
    Event.observe(closer, 'click', im_closeWhiteBoard);

    // fill contents
    var div = document.createElement('div'); // main box
    div.id = "im_showLayerMD";
    div.className = 'im_wbcontent';
    WB.appendChild(div);
   
    var myAjax = new Ajax.Request(    
    	'/intermap/srv/'+Env.lang+'/map.layers.getInfo', 
    	{
    		method: 'get',    
    		parameters: 'id='+id,
    		onSuccess: function(req)
    		{
    		     if(req.responseXML && req.responseXML.documentElement.tagName == "error")
    		     {
    	                    var resp = req.responseXML.documentElement;
                               var msg = resp.getElementsByTagName('message')[0].firstChild.nodeValue;
                               div.innerHTML = msg;
                               return;
                           }
                           else
                           {
                               div.innerHTML = req.responseText; 
                           }
    		},
    		onFailure: function(req)
    		{
                               div.innerHTML = i18n('genericError');     		
    		}
    	}
    );    
}

/********************************************************************
*** Layer styles
***
*** This feature is not triggered from the bottom toolsbar, but by the "show styles" button on every layer which has selectable styles..
*** We'll use the sub-map area to display these info.
***
********************************************************************/

function im_showStyles(id)
{
    // setup WB
    clearNode('im_whiteboard');    
    var WB = $('im_whiteboard');

    var wbtitle = im_createWBTitle(i18n('showStyles')); 
    WB.appendChild(wbtitle);

    var closer = im_getWBCloser();
    WB.appendChild(closer);
    Event.observe(closer, 'click', im_closeWhiteBoard);

    // fill contents
    var div = document.createElement('div'); // main box
    div.id = "im_showstyles";
    div.className = 'im_wbcontent';
    WB.appendChild(div);
   
    var myAjax = new Ajax.Request(    
    	'/intermap/srv/'+Env.lang+'/map.layers.getStyles', 
    	{
    		method: 'get',    
    		parameters: 'id='+id,
    		onSuccess: function(req)
    		{
    		     if(req.responseXML && req.responseXML.documentElement.tagName == "error")
    		     {
    	                    var resp = req.responseXML.documentElement;
                               var msg = resp.getElementsByTagName('message')[0].firstChild.nodeValue;
                               div.innerHTML = msg;
                               return;
                           }
                           else
                           {
                               div.innerHTML = req.responseText; 
                           }
    		},
    		onFailure: function(req)
    		{
                               div.innerHTML = i18n('genericError');     		
    		}
    	}
    );    
}

/**
## Called by a button in the layers.getStyles output
*/
function im_setStyle(layerid)
{
    // retrieve selected style
    
    // update user mesg
    
    // do ajax call
    
    // update user mesg
    
    // on success, 
      // reload big map
      // reload minimap
      // reload layer list (legend link may have changed)
}

/********************************************************************
*** SUB TOOLBAR UTILITIES
********************************************************************/


function im_createWBTitle(title)
{
    var div = Builder.node('div', {id: "im_wbtitle"});
    var h1 = Builder.node('h1');
    h1.innerHTML = title;
    div.appendChild(h1);       

//    Effect.BlindDown('im_whiteboard');

    return div;
}


function im_getWBCloser()
{
    var closer = Builder.node('div', {id: "im_wbcloser"});
    var img = Builder.node('img',
    {
        title: "Close", // FIXME i18N
        src: "/intermap/images/close.png"
    });
    closer.appendChild(img);
    
    //Event.observe(closer, 'click', im_closeWhiteBoard);
        return closer;
}

function im_closeWhiteBoard()
{
//    Effect.SwitchOff('im_whiteboard');
//    Effect.BlindUp('im_whiteboard');
    clearNode('im_whiteboard');
}
